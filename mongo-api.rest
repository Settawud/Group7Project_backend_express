@ts = {{$timestamp}}
@email = ada.{{ts}}@example.com

### Health: DB
GET http://localhost:4000/health/db

### Mongo Auth: register
POST http://localhost:4000/api/v1/mongo/auth/register
Content-Type: application/json

{
  "firstname": "Ada",
  "lastname": "Lovelace",
  "email": "{{email}}",
  "phone": "+66801234567",
  "password": "secret123",
  "image": ""
}

### Mongo Auth: login
# @name mongo_login
POST http://localhost:4000/api/v1/mongo/auth/login
Content-Type: application/json

{
  "email": "ada.1757360114@example.com",
  "password": "secret123"
}

//@token = {{mongo_login.response.body.token}}

### Mongo Users: me
GET http://localhost:4000/api/v1/mongo/users/me
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g

### Mongo Users: update me
PATCH http://localhost:4000/api/v1/mongo/users/me
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g
Content-Type: application/json

{
  "firstname": "Ada",
  "lastname": "L."
}

### Mongo Users: change password
PATCH http://localhost:4000/api/v1/mongo/users/me/password
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "oldPassword": "secret123",
  "newPassword": "secret456"
}

### Colors: list
# @name colors_list
GET http://localhost:4000/api/v1/colors

@colorId = {{colors_list.response.body.items[0].id}}

### Colors: create (requires auth)
POST http://localhost:4000/api/v1/colors
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g
Content-Type: application/json

{
  "name_th": "สีฟ้า",
  "name_en": "Blue",
  "hex": "#3b82f6"
}

### Products: create (auth required)
POST http://localhost:4000/api/v1/products
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g
Content-Type: application/json

{
  "name": "Standing Desk Pro",
  "description": "Adjustable height standing desk",
  "category": "desk",
  "trial": false,
  "tags": ["office", "ergonomic"],
  "material": "Steel/Wood",
  "images": ["/images/standing-desk.jpg"],
  "dimension": { "width": 120, "height": 75, "depth": 60, "weight": 30 },
  "variants": [
    {
      "trial": false,
      "colorId": "{{colorId}}",
      "price": 13900,
      "quantityInStock": 5,
      "images": ["/images/desk-black.jpg"]
    }
  ]
}

### Products: list (grab ids)
# @name products_list
GET http://localhost:4000/api/v1/products

@productId = {{products_list.response.body.items[0].id}}
@variantId = {{products_list.response.body.items[0].variants[0].id}}

### Products: detail by productId
GET http://localhost:4000/api/v1/products/prd_a73a9478-683a-40d8-8778-ae2ae6ba5843

### Cart: get (auth required)
GET http://localhost:4000/api/v1/cart
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g

### Cart: add item (productId + variantId)
POST http://localhost:4000/api/v1/cart/items
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g
Content-Type: application/json

{
  "productId": "{{productId}}",
  "variantId": "{{variantId}}",
  "quantity": 1
}

### Orders: create from cart
POST http://localhost:4000/api/v1/orders
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g
### Orders: list
GET http://localhost:4000/api/v1/orders
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g

### Mongo Auth: logout (clear cookie, client should also discard token)
POST http://localhost:4000/api/v1/mongo/auth/logout
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g

### Mongo Auth: logout-all (revoke all sessions)
POST http://localhost:4000/api/v1/mongo/auth/logout-all
Authorization: BearereyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGJmMmZmMzBkZTVkMTc0OTY1NWI0MTgiLCJlbWFpbCI6ImFkYS4xNzU3MzYwMTE0QGV4YW1wbGUuY29tIiwibmFtZSI6IkFkYSBMb3ZlbGFjZSIsInN2IjowLCJpYXQiOjE3NTczNjAzMzcsImV4cCI6MTc1Nzk2NTEzN30.RVsBbr2TTeXm4nusXlUbhlAZThihglXcqcbAmpyiY9g
