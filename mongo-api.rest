@base = http://localhost:4000
@ts = {{$timestamp}}
@email = ada.{{ts}}@example.com

### Health: DB
GET {{base}}/health/db

### Auth: register (Mongo)
POST {{base}}/api/v1/mongo/auth/register
Content-Type: application/json

{
  "firstname": "Ada",
  "lastname": "Lovelace",
  "email": "{{email}}",
  "phone": "0801234567",
  "password": "secret123",
  "image": ""
}

### Auth: login (Mongo)
# @name login
POST {{base}}/api/v1/mongo/auth/login
Content-Type: application/json

{
  "email": "ada.1757398104@example.com",
  "password": "secret456"
}

###
@token = {{login.response.body.token}}

### Users: me
GET {{base}}/api/v1/mongo/users/me
Authorization: Bearer {{token}}

### Users: update me
PATCH {{base}}/api/v1/mongo/users/me
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "firstname": "Ada",
  "lastname": "L.",
  "phone": "0123456789"
}

### Users: change password
PATCH {{base}}/api/v1/mongo/users/me/password
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "oldPassword": "secret123",
  "newPassword": "secret456"
}

### Colors: create (Mongo)
# @name colors_create
POST {{base}}/api/v1/mongo/colors
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name_th": "สีดำ",
  "name_en": "Black",
  "hex": "#000000"
}

###
@colorId = {{colors_create.response.body.item._id}}

### Colors: list (Mongo)
GET {{base}}/api/v1/mongo/colors

### Colors: get by id (Mongo)
GET {{base}}/api/v1/mongo/colors/{{colorId}}

### Colors: patch (Mongo)
PATCH {{base}}/api/v1/mongo/colors/{{colorId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name_en": "Jet Black"
}

### Colors: delete (Mongo) temp
# @name colors_tmp_create
POST {{base}}/api/v1/mongo/colors
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name_th": "สีเทา",
  "name_en": "Gray",
  "hex": "#888888"
}

###
@colorTmpId = {{colors_tmp_create.response.body.item._id}}

DELETE {{base}}/api/v1/mongo/colors/{{colorTmpId}}
Authorization: Bearer {{token}}

### Products: create (Mongo)
# @name product_create
POST {{base}}/api/v1/mongo/products
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Standing Desk Pro",
  "description": "Adjustable height standing desk",
  "category": "desk",
  "trial": false,
  "tags": ["office", "ergonomic"],
  "material": "Steel/Wood",
  "images": ["/images/standing-desk.jpg"],
  "dimension": { "width": 120, "height": 75, "depth": 60, "weight": 30 },
  "variants": [
    {
      "trial": false,
      "colorId": "{{colorId}}",
      "price": 13900,
      "quantityInStock": 5,
      "images": ["/images/desk-black.jpg"]
    }
  ]
}

###
@productId = {{product_create.response.body.item._id}}
@variantId = {{product_create.response.body.item.variants[0]._id}}

### Products: list (Mongo)
GET {{base}}/api/v1/mongo/products

### Products: get by id (Mongo)
GET {{base}}/api/v1/mongo/products/{{productId}}

### Products: patch (Mongo)
PATCH {{base}}/api/v1/mongo/products/{{productId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "material": "Steel/Wood/Glass"
}

### Products: delete (Mongo) temp product
# @name product_tmp_create
POST {{base}}/api/v1/mongo/products
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Temp Product",
  "description": "will be deleted",
  "category": "test",
  "trial": false,
  "material": "Test",
  "dimension": { "width": 1, "height": 1, "depth": 1, "weight": 1 },
  "variants": [ { "colorId": "{{colorId}}", "price": 1, "quantityInStock": 1 } ]
}

###
@productTmpId = {{product_tmp_create.response.body.item._id}}

DELETE {{base}}/api/v1/mongo/products/{{productTmpId}}
Authorization: Bearer {{token}}

### Cart: get (Mongo)
GET {{base}}/api/v1/mongo/cart
Authorization: Bearer {{token}}

### Cart: add item (Mongo)
POST {{base}}/api/v1/mongo/cart/items
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "productId": "{{productId}}",
  "variantId": "{{variantId}}",
  "quantity": 1
}

### Cart: update quantity (Mongo)
PATCH {{base}}/api/v1/mongo/cart/items/{{productId}}/{{variantId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "quantity": 3
}

### Orders: create from cart (Mongo)
POST {{base}}/api/v1/mongo/orders
Authorization: Bearer {{token}}

### Orders: list (Mongo)
# @name orders_list
GET {{base}}/api/v1/mongo/orders
Authorization: Bearer {{token}}

###
@orderId = {{orders_list.response.body.items[0]._id}}

### Orders: get by id (Mongo)
GET {{base}}/api/v1/mongo/orders/{{orderId}}
Authorization: Bearer {{token}}

### Orders: update shipping to Shipped (Mongo)
PATCH {{base}}/api/v1/mongo/orders/{{orderId}}/shipping
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "address": "99/11 หมู่บ้านตัวอย่าง, เขตเมือง, นนทบุรี",
  "trackingNumber": "TH{{ts}}",
  "deliveryStatus": "Shipped"
}

### Orders: update shipping to Delivered (Mongo)
PATCH {{base}}/api/v1/mongo/orders/{{orderId}}/shipping
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "deliveryStatus": "Delivered"
}

### Reviews: create (Mongo)
POST {{base}}/api/v1/mongo/reviews
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "productId": "{{productId}}",
  "rating": 5,
  "comment": "ยอดเยี่ยมมาก นั่งสบาย"
}

### Reviews: list by product (Mongo)
GET {{base}}/api/v1/mongo/reviews/product/{{productId}}

### Reviews: my reviews (Mongo)
GET {{base}}/api/v1/mongo/reviews/me
Authorization: Bearer {{token}}

### Discounts: create (Mongo)
POST {{base}}/api/v1/mongo/discounts
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "code": "WELCOME{{ts}}",
  "description": "ส่วนลดเปิดใช้งานครั้งแรก",
  "type": "percentage",
  "value": 10,
  "maxDiscount": 500,
  "minOrderAmount": 1000,
  "startDate": "2025-01-01T00:00:00.000Z",
  "endDate": "2025-12-31T23:59:59.000Z"
}

### Discounts: list (Mongo)
GET {{base}}/api/v1/mongo/discounts
Authorization: Bearer {{token}}

### Auth: logout (Mongo)
POST {{base}}/api/v1/mongo/auth/logout
Authorization: Bearer {{token}}

### Auth: logout-all (Mongo)
POST {{base}}/api/v1/mongo/auth/logout-all
Authorization: Bearer {{token}}
